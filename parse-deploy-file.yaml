---
platform: linux

image_resource:
  type: docker-image
  source:
    repository: python
    tag: alpine

# directories this task can read from
inputs:
- name: webapp-source

# exported directories, where output files can be shared with other tasks
outputs:
- name: deploy-params

# These params are made available as environment variables
# The values are passed by the invoking pipeline
params:
  IPS_DOM1:
  IPS_QUANTUM:
  IPS_102PF_WIFI:

run:
  path: sh
  args:
  - -ec
  - |
    python - <<EOF
    import json, os
    lookup = {
      '102PF Wifi': '$IPS_102PF_WIFI',
      'DOM1': '$IPS_DOM1',
      'QUANTUM': '$IPS_QUANTUM',
      'Any': ''
    }

    with open('webapp-source/deploy.json') as input:
      print('Parsing deploy.json')
      data = json.load(input)

    allowed = data.get('allowed_ip_ranges', [])
    if 'Any' in allowed:
      ip_ranges = ['']
    else:
      ip_ranges = [lookup[name] for name in allowed if name in lookup]
    if not ip_ranges:
      ip_ranges = [lookup['DOM1']]

    auth_required = not data.get('disable_authentication', False)
    webapp_port = data.get('port', 80)

    # The following are input values of the webapp helm chart
    with open('deploy-params/overrides.yaml', 'w') as output:
      json.dump({
        'AuthProxy': {
          'AuthenticationRequired': auth_required,
          'IPRanges': ','.join(ip_ranges),
        },
        'WebApp': {
          'Port': webapp_port,
        },
      }, output)
    print('Wrote deploy-params/overrides.yaml')

    os.mkdir('deploy-params/auth-proxy')

    with open('deploy-params/auth-proxy/auth-required', 'w') as f:
      f.write(str(auth_required).lower())
      print('Wrote deploy-params/auth-proxy/auth-required')

    with open('deploy-params/auth-proxy/ip-ranges', 'w') as f:
      f.write(','.join(ip_ranges))
      print('Wrote deploy-params/auth-proxy/ip-ranges')

    EOF
