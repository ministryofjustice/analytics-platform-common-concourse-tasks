---
platform: linux

image_resource:
  type: docker-image
  source:
    repository: "lxfontes/kaniko-resource"
    # Using latest for now but once kaniko caching bug is fixed hopefully
    # this resource Docker image will be rebuild and we can pin to a specific
    # image tag
    #
    # Bugfix PR (not merged yet): https://github.com/GoogleContainerTools/kaniko/pull/441/
    tag: "latest"

inputs:
- name: release
- name: webapp-docker-repo
- name: webapp-source

outputs:
- name: webapp-docker-image

params:
  AWS_ACCESS_KEY_ID: ((ecr-access-key-id))
  AWS_SECRET_ACCESS_KEY: ((ecr-secret-access-key))

run:
  path: sh
  args:
    - -ec
    - |
      echo "DEBUG:" &&
      cat $(pwd)/webapp-source/Dockerfile &&
      jq -n "{
        source: {
          repository: \"$(cat webapp-docker-repo/uri)\",
          aws_access_key_id: \"${AWS_ACCESS_KEY_ID}\",
          aws_secret_access_key: \"${AWS_SECRET_ACCESS_KEY}\"
        },
        params: {
          build: \"$(pwd)/webapp-source\",
          dockerfile: \"Dockerfile\",
          tag_file: \"$(pwd)/release/tag\",
          build_args: {
            \"--cache\": true,
            \"--verbosity\": \"debug\"
          }
        }
      }" | /opt/resource/out $(pwd)/webapp-source

#           load_base: \"rocker-shiny\",
# ERROR: open rocker-shiny/image: no such file or directory


        # source: {
        #   repository: \"$(cat webapp-docker-repo/uri)\",
        #   aws_access_key_id: \"${AWS_ACCESS_KEY_ID}\",
        #   aws_secret_access_key: \"${AWS_SECRET_ACCESS_KEY}\"
        # },
